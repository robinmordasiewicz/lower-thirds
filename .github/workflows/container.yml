name: Version Increment, Build, and Push Video

on:
  push:
    branches-ignore:
      - main
    paths:
      - 'Dockerfile'
      - 'main.py'
      - 'assets/*'
      - '*.mlt'

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  version-and-build:
    if: github.ref != 'refs/heads/main'  # Ensure the job runs only if the branch is not 'main'
    timeout-minutes: 1440
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Update permission to allow writing to repository
      packages: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5

      - name: Verify VERSION file exists or create one
        id: check_version
        run: |
          if [ ! -f VERSION ]; then
            echo "VERSION file not found! Creating a new one with the initial value 0.0.1."
            echo "0.0.1" > VERSION
          fi

      - name: Validate VERSION format
        id: validate_version
        run: |
          VERSION_CONTENT=$(cat VERSION)
          if [[ ! "$VERSION_CONTENT" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid version format: $VERSION_CONTENT. It should follow x.x.x format."
            exit 1
          fi
        env:
          CURRENT_VERSION: $VERSION_CONTENT

      - name: Increment Version
        id: increment_version
        run: |
          version=$(cat VERSION)
          IFS='.' read -r major minor patch <<< "$version"
          new_patch=$((patch + 1))
          new_version="$major.$minor.$new_patch"
          echo $new_version > VERSION
          echo "New version: $new_version"
          echo "new_version=$new_version" >> $GITHUB_ENV

      - name: Read Incremented VERSION
        id: read_version
        run: |
          VERSION=$(cat VERSION)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Set up QEMU for multi-architecture builds
        uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7  # Latest commit hash

      - name: Setup Docker buildx for multi-architecture builds
        uses: docker/setup-buildx-action@885d1462b80bc1c1c7f0b00334ad271f09369c55  # Latest commit hash
        with:
          use: true

      - name: Log in to Container Registry
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc  # Latest commit hash
        with:
          registry: "ghcr.io"
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image with new VERSION tag
        id: build_and_push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a  # Latest commit hash
        with:
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/video:latest
            ghcr.io/${{ github.repository_owner }}/video:${{ env.new_version }}
        continue-on-error: false  # Ensure the job fails if the build or push fails

      - name: Commit and Push New Version if Docker Build is Successful
        if: success()
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          echo ${{ env.new_version }} > VERSION
          git add VERSION
          git commit -m "Increment version to ${{ env.new_version }}"
          git push origin ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

      - name: Create Pull Request for New Version to Main
        if: success()
        uses: peter-evans/create-pull-request@18f7dc018cc2cd597073088f7c7591b9d1c02672  # Latest commit hash
        with:
          token: ${{ secrets.PAT_TOKEN }}
          branch: ${{ github.ref_name }}  # Use the current branch for the pull request
          base: main  # PR target is the main branch
          title: Increment version to ${{ env.new_version }}
          body: |
            This pull request increments the version in the VERSION file to ${{ env.new_version }}.